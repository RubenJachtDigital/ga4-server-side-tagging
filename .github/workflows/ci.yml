name: CI Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.0', '8.1', '8.2']

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-

    - name: Install Composer dependencies
      run: |
        # Remove lock file and install dependencies for current PHP version
        rm -f composer.lock
        composer install --prefer-dist --no-progress

    - name: Run PHP syntax check
      run: composer lint

    - name: Run WordPress-independent tests
      run: composer test

  # Legacy PHP 7.4 support test (minimal dependencies)
  legacy-php:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup PHP 7.4
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4'
        extensions: dom, curl, libxml, mbstring, zip

    - name: Install minimal dependencies for PHP 7.4
      run: |
        composer install --prefer-dist --no-progress --ignore-platform-reqs --no-dev
        composer require --dev "phpunit/phpunit:^9.5" --ignore-platform-reqs

    - name: Run PHP syntax check only
      run: |
        find . -name '*.php' -not -path './vendor/*' -not -path './node_modules/*' -exec php -l {} \;

  security:
    runs-on: ubuntu-latest
    name: Security checks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        
    - name: Install Composer dependencies
      run: |
        # Remove lock file and install dependencies for current PHP version
        rm -f composer.lock
        composer install --prefer-dist --no-progress

    - name: Run PHP Mess Detector
      run: composer run-script md
      continue-on-error: true

    - name: Security audit for Composer dependencies
      run: composer audit
      continue-on-error: true

  deployment-test:
    runs-on: ubuntu-latest
    name: Test plugin deployment
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        
    - name: Install Composer dependencies (production only)
      run: |
        # Remove lock file and install dependencies for current PHP version
        rm -f composer.lock
        composer install --prefer-dist --no-progress --no-dev
      
    - name: Test plugin activation
      run: |
        # Simple test to ensure plugin file syntax is valid
        php -l ga4-server-side-tagging.php
        
    - name: Check for required WordPress functions
      run: |
        # Ensure plugin doesn't use development-only functions
        if grep -r "var_dump\|print_r\|error_log" --include="*.php" --exclude-dir=tests --exclude-dir=vendor .; then
          echo "Found debug functions in production code"
          exit 1
        fi